local conf = {
    display = {
        open_fn = function()
            return require('packer.util').float { border = 'rounded' }
        end,
    }
}

local ensure_packer = function()
    local fn = vim.fn
    local install_path = fn.stdpath('data')..'/site/pack/packer/start/packer.nvim'
    if fn.empty(fn.glob(install_path)) > 0 then
        fn.system({'git', 'clone', '--depth', '1', 'https://github.com/wbthomason/packer.nvim', install_path})
        vim.cmd [[packadd packer.nvim]]
        return true
    end
    return false
end

local packer_bootstrap = ensure_packer()

local function plugins(use)

    -- DAP
    use {
        "mfussenegger/nvim-dap",
        requires = {
            "rcarriga/nvim-dap-ui",
            "mfussenegger/nvim-dap-python",
        },
        config = function()
            require("config.dap")
        end,
    }

    -- LSP, including Metals and JDTLS
    use {
        "williamboman/mason.nvim",
        "williamboman/mason-lspconfig.nvim",
        'scalameta/nvim-metals',
        'mfussenegger/nvim-jdtls',
    }
    use {
        "neovim/nvim-lspconfig",
        config = function()
            require("config.lsp")
        end,
    }
    use {
        'jose-elias-alvarez/null-ls.nvim',
        config = function()
            require("config.null_ls")
        end,
    }

    -- Code completion
    use {
        "hrsh7th/nvim-cmp",
        requires = {
            "hrsh7th/cmp-nvim-lsp",
            "hrsh7th/cmp-vsnip",
            "hrsh7th/vim-vsnip",
            "hrsh7th/cmp-buffer",
        },
        config = function()
            require("config.cmp")
        end,
    }

    -- Auto-close for brackets and quotes
    use {
        'm4xshen/autoclose.nvim',
        config = function()
            require("autoclose").setup()
        end,
    }

    -- Automatically set up configuration after cloning packer.nvim
    if packer_bootstrap then
        require('packer').sync()
    end
end

local packer = require('packer')
packer.init(conf)
packer.startup(plugins)


